<?xml version='1.0' encoding='UTF-8'?>
<!--Proposed Tool Section: [File Handling]-->
<tool id="rnmr1d" name="rnmr1d" version="0.5">
  <requirements>
    <container type="docker">container-registry.phenomenal-h2020.eu/phnmnl/rnmr1d</container>
  </requirements>
  <description>Preprocessing RAW NMR data with macro-commands.</description>
  <command><![CDATA[
export infile_names='
#for $infile in $infiles:
${infile.name},
#end for
';
    mkdir -p /data/input;
    mkdir -p /data/output;
    for i in `echo \$infile_names | perl -pe 's/ /_/g' | perl -pe 's/\,_/\n/g'`; do echo \$i | perl -pe 's/\..*//' >> /tmp/infiles.name.txt; done;
    for infile in `echo $infiles | perl -pe 's/\,/\n/g'`; do echo \$infile >> /tmp/infiles.txt; done;
    export inlength=`cat /tmp/infiles.txt | wc -l`;
    if [ \$inlength -ne `cat /tmp/infiles.name.txt | wc -l` ]; then echo "Oopsie. Number of files and files.name are not equal."; exit 1; fi;
    for c in `seq 1 \$inlength`; do
        export infile=`cat /tmp/infiles.txt | head -n \$c | tail -n 1`;
        export cpfile=`cat \$infile | grep 'acquisition1D id=' | sed -e 's/.*id\=\"//' | sed -e 's/\".*/\.nmrML/'`;
        cp -f \$infile /data/input/\$cpfile;
    done;
    /opt/rnmr1d/exec/Rnmr1D --input /data/input --proccmd $macrofile --outnorm PQN --cpu 8 --outdir /data/output 2>&1;
    ls -al /data/output;
    cat /data/output/data_matrix.txt > $outfile;
    cat /data/output/bucket_out.txt > $bucketfile;
    cat /data/output/specs.pack > $specsfile;
  ]]>
  </command>
  <inputs>
    <param name="infiles" type="data" format="txt" multiple="True" optional="False" label="nmrML collection data" />
    <param name="macrofile" type="data" format="txt" optional="False" label="Macro-Command file" />
  </inputs>
  <outputs>
    <data name="outfile" type="data" format="txt" label="NMR data matrix" />
    <data name="bucketfile" type="data" format="txt" label="NMR bucket matrix" />
    <data name="specsfile" type="data" format="binary" label="NMR binary data" />
  </outputs>
  <help>
Rnmr1D allows users to replay the macro-command sequence generated within NMRProcFlow. Moreover, without using NMRProcFlow, this module can also be used to replace any home-made script by a macro-command sequence.
  </help>
</tool>
